taco:
  orders:
    page-size: 10

# tacocloud:
#   api:
#     url: http://api.tacocloud.com
#   email:
#     host: imap.tacocloud.com
#     mailbox: INBOX
#     username: taco-in-flow
#     password: 1L0v3T4c0s
#     poll-rate: 10000

spring:
  jpa:
    show-sql: true
  data:
    rest:
      base-path: /api
  cache:
    jcache:
      config: classpath:ehcache.xml
  # jms:
  #   template:
  #     default-destination: tacocloud.order.queue
  # rabbitmq:
  #   template:
  #     exchange: tacocloud.orders
  #     routing-key: kitchens.central
  #     receive-timeout: 30000
  # kafka:
  #   bootstrap-servers:
  #     - localhost:9092
  #   consumer:
  #     group-id: test-group-id
  #   template:
  #     default-topic: tacocloud.orders.topic
  #   producer:
  #     key-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  #     value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

logging:
  level:
    '[tacos]': debug

bucket4j:
  enabled: true
  filters:
  - cache-name: buckets
    url: .*
    rate-limits:
    - bandwidths:
      - capacity: 5
        time: 10
        unit: seconds
